@page "/"
@page "/user-collections"
@using CarspotLourd.Models
@using CarspotLourd.Services
@using System.Text.Json
@inject SupabaseService SupabaseService

<h2 class="mb-4">User Collections</h2>

<!-- Vue d'ensemble rapide -->
<div class="mb-3">
    @if (!isLoading && collections != null)
    {
        <p>Nombre total de collections: <strong>@collections.Count</strong></p>
    }
</div>

@if (isLoading)
{
    <p><em>Chargement...</em></p>
}
else if (errorMessage != null)
{
    <div class="alert alert-danger">
        <h4>Une erreur s'est produite :</h4>
        <p>@errorMessage</p>
    </div>
}
else if (collections == null || collections.Count == 0)
{
    <p>Aucune donnée trouvée.</p>
}
else
{
    <div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>ID</th>
                <th>User ID</th>
                <th>Model ID</th>
                <th>Spotted</th>
                <th>Created At</th>
                <th>Location</th>
                <th>Is Public</th>
                <th>Superspot</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var collection in collections)
            {
                <tr>
                    <td>@collection.Id</td>
                    <td>@collection.UserId</td>
                    <td>@collection.ModelId</td>
                    <td>@collection.Spotted</td>
                    <td>@(collection.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss"))</td>
                    <td>@collection.Location</td>
                    <td>@collection.IsPublic</td>
                    <td>@collection.Superspot</td>
                </tr>
            }
        </tbody>
    </table>
</div>
}

@code {
    private List<UserCollection> collections;
    private bool isLoading = true;
    private string errorMessage = null;

    private List<UserCollection> GetDummyData()
    {
        // Créer quelques données factices pour démontrer l'interface
        return new List<UserCollection>
        {
            new UserCollection
            {
                Id = Guid.NewGuid(),
                UserId = Guid.NewGuid(),
                ModelId = 1,
                Spotted = true,
                CreatedAt = DateTime.Now.AddDays(-5),
                Location = "Paris",
                IsPublic = true,
                Superspot = false
            },
            new UserCollection
            {
                Id = Guid.NewGuid(),
                UserId = Guid.NewGuid(),
                ModelId = 2,
                Spotted = false,
                CreatedAt = DateTime.Now.AddDays(-2),
                Location = "Lyon",
                IsPublic = true,
                Superspot = true
            },
            new UserCollection
            {
                Id = Guid.NewGuid(),
                UserId = Guid.NewGuid(),
                ModelId = 3,
                Spotted = true,
                CreatedAt = DateTime.Now.AddDays(-1),
                Location = "Marseille",
                IsPublic = false,
                Superspot = false
            }
        };
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("UserCollections: Initialisation du composant...");
            isLoading = true;
            
            Console.WriteLine("UserCollections: Tentative de récupération des données...");
            collections = await SupabaseService.GetUserCollectionsAsync();
            
            Console.WriteLine($"UserCollections: Données récupérées avec succès! {collections?.Count ?? 0} éléments");
            
            // S'assurer que collections n'est jamais null
            if (collections == null || collections.Count == 0)
            {
                // Utiliser des données factices si aucune donnée n'est disponible
                collections = GetDummyData();
                Console.WriteLine("Utilisation de données factices pour l'affichage");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur: {ex.Message}";
            Console.WriteLine($"UserCollections: Erreur lors de la récupération des données: {ex.Message}");
            Console.WriteLine($"UserCollections: Erreur détaillée: {ex}");
            
            // Utiliser des données factices en cas d'erreur
            collections = GetDummyData();
            Console.WriteLine("Utilisation de données factices après erreur");
        }
        finally
        {
            // Toujours mettre fin au chargement
            isLoading = false;
        }
    }
}